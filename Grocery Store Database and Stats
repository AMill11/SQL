--Create a grocery store database--

CREATE TABLE beverages (id INTEGER PRIMARY KEY, Name TEXT, Price REAL, Curren_Qty INTEGER, Ideal_Qty INTEGER);

INSERT INTO beverages VALUES (1, "Pepsi", 1.89, 8, 15);
INSERT INTO beverages VALUES (2, "Diet Pepsi", 1.89, 9, 15);
INSERT INTO beverages VALUES (3, "Ginger Ale", 1.89, 5, 15);
INSERT INTO beverages VALUES (4, "White Claws", 6.57, 3, 20);
INSERT INTO beverages VALUES (5, "Coors Light", 5.50, 6, 20);
INSERT INTO beverages VALUES (6, "Bud Light", 5.50, 3, 20);
INSERT INTO beverages VALUES (7, "Deep Eddy", 6.57, 2, 20);
INSERT INTO beverages VALUES (8, "Water", 2.00, 3, 50);
INSERT INTO beverages VALUES (9, "Lemonade", 2.50, 6, 15);
INSERT INTO beverages VALUES (10, "Soda Water", 1.89, 13, 15);
INSERT INTO beverages VALUES (11, "RedBull", 3.00, 11, 15);
INSERT INTO beverages VALUES (12, "Gatorade", 4.00, 12, 15);
INSERT INTO beverages VALUES (13, "Orange Juice", 2.00, 10, 15);
INSERT INTO beverages VALUES (14, "Dr. Pepper", 1.89, 3, 15);
INSERT INTO beverages VALUES (15, "Sprite", 1.89, 2, 15);

SELECT * FROM beverages;

-- display a table of all items ordered by price.
SELECT * FROM beverages 
ORDER BY Price;

-- display the total ideal quantity of all items. 
SELECT SUM(Ideal_Qty) FROM beverages;

-- display the current quantity of all items.
SELECT SUM(Curren_Qty) FROM beverages;

-- display the amount of items needed to get to the ideal quantity of all items. 
SELECT SUM(Ideal_Qty)-SUM(Curren_Qty) FROM beverages;

-- display each item with the current quantity and the ideal quanity of that item. 
SELECT name, Ideal_Qty, Curren_Qty FROM beverages; 


